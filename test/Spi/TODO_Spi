TODO_Spi

Start transmission needs a data collision flag.
Think about a multi-threaded collision flag.

The Spi Overflow handler interrupt needs to save data. The only way I can think of is to use a global variable. Correct?

Disable interrupts when usi overflow is saving data?

Add reset function? We could clear out the counter, clear the flag, and re-load data to USIDR.

Port demo code for ATtiny861 and compile it to see how its size compares to mine.

Put in something to prevent an infinite loop in the Spi?

This implementation has two flaws:
  There is a possibility of an infinite loop in Spi_SendData()
  You can't easily control the speed at which the SPI operates.
    We need this because there's no guarantee that a slave will be able to operate at the same speed as this MCU.
  Should refactor and use an interrupt to send data.

How to incorporate slave select?
  When prepping for a write, test other slave select lines before pulling the current one low.


Create slave implementation.
Send needs to be able to select a slave.

Add Slave Destroy
